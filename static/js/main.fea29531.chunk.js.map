{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweets.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseUrl","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","dbService","firestore","authService","auth","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","data","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fea29531.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseUrl: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const authService = firebase.auth();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n\tconst [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n\tconst onChange = (event) => {\n    // console.log(event.target.name)\n    const {target: {name, value},} = event;\n    if (name === 'email') {\n      setEmail(value)\n    } else if (name === 'password') {\n      setPassword(value)\n    }\n  }\n  const onSubmit = async(event) => {\n    event.preventDefault()\n    try {\n      let data\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password)\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password)\n      }\n    } catch (error) {\n      console.log(error.message)\n      setError(error.message)\n    }\n  }\n\n  const toggleAccount = () => setNewAccount((prev) => !prev)\n\n\treturn (\n\t<>\n\t\t<form onSubmit={onSubmit} className=\"container\">\n\t\t\t<input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email}  className=\"authInput\" onChange={onChange}/>\n\t\t\t<input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password}  className=\"authInput\" onChange={onChange}/>\n\t\t\t<input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"}  />\n\t\t\t{error}\n\t\t</form>\n\t\t<span onClick={toggleAccount} className=\"authSwitch\" >{newAccount ? 'Sign in' : 'Create Account'}</span>\n\t</>\t\n\t)\n};\n\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {target:{name}} = event\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  } \n  \n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm/>\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick}  name=\"google\" className=\"authBtn\" >\n          Continue with Google\n          <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick}  name=\"github\" className=\"authBtn\" >\n          Continue with GitHub\n          <FontAwesomeIcon icon={faGithub} />\n        </button>\n        {/* <button>Continue with GitHub</button> */}\n      </div>\n    </div>\n  )\n}\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async() => {\n    const ok = window.confirm(\"Are you sure you want to delete nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    } \n  }\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: {value},\n    } = event;\n    setNewNweet(value);\n  }\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input \n              type=\"text\" \n              placeholder=\"Edit your nweet\" \n              value={newNweet} \n              onChange={onChange}\n              required\n              autoFocus\n              className=\"formInput\"/>\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n          <>\n            <h4>{nweetObj.text}</h4>\n            {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n            {isOwner && (\n              <div class=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            )}\n          </>\n      )}\n    </div>\n  )\n}\n\nexport default Nweet; ","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst NweetFactory = ({ userObj }) => {\n\t\n\tconst [nweet, setNweet] = useState(\"\");\n\tconst [attachment, setAttachment] = useState(\"\");\n\n\tconst onSubmit = async(event) =>{\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if (nweet === \"\") {\n      return;\n    }\n\n    if(attachment !== \"\") {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const nweetObj = {\n      text : nweet,\n      createdAt : Date.now(),\n      creatorId : userObj.uid,\n      attachmentUrl\n    } \n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  }\n\n  const onChange = (event) => {\n    const {\n      target : { value }\n    } = event;\n    setNweet(value);\n  } \n\n  const onFileChange = (event) => {\n    const {\n      target : { files }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: {result}\n      } = finishedEvent;\n      \n      setAttachment(result);\n    }\n    reader.readAsDataURL(theFile);\n  }\n\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n  }\n\n\treturn (\n\t\t<form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n\n\t\t\t<input \n\t\t\t\tid=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n\t\t\t/>\n\t\t\t{attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n\t\t\t)}\n\t\t</form>\n\t);\n}\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"components/Nweets\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\nconst [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map(doc =>({\n        id : doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray)\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj}/>\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet \n            key={nweet.id} \n            nweetObj={nweet} \n            isOwner={nweet.creatorId === userObj.uid}/>\n        ))}\n      </div>\n    </div>\n  )\n}\nexport default Home;","import { authService, dbService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  }\n\n  /*\n  const getMyNweets = async() => {\n    const nweets = await dbService\n                        .collection(\"nweets\")\n                        .where(\"creatorId\", \"==\", userObj.uid)\n                        .orderBy(\"createdAt\")\n                        .get();\n    console.log(nweets.docs.map(doc => doc.data()));\n  }\n  */\n\n  const onChange = (event) => {\n    const {\n      target: { value }\n    } = event;\n    setNewDisplayName(value);\n  }\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if(userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile(\n        { displayName : newDisplayName }\n      );\n      refreshUser();\n    }\n    \n  }\n\n  return ( \n    <div className=\"container\">\n      <form className=\"profileForm\" onSubmit={onSubmit}>\n        <input onChange={onChange} \n              type=\"text\" \n              placeholder=\"Display name\" \n              autoFocus\n              value={newDisplayName} \n              className=\"formInput\"\n        />\n        <input type=\"submit\" value=\"Update Profile\" \n              className=\"formBtn\"\n              style={{\n                marginTop: 10,\n              }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  )\n};\n\nexport default Profile;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => <nav>\n  <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n    <li>\n      <Link to=\"/\" style={{ marginRight: 10 }}>\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n      </Link>\n    </li>\n    <li>\n      <Link\n        to=\"/profile\"\n        style={{\n          marginLeft: 10,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          fontSize: 12,\n        }}\n      >\n        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n        <span style={{ marginTop: 10 }}>\n          {userObj.displayName\n            ? `${userObj.displayName}의 Profile`\n            : \"Profile\"}\n        </span>\n      </Link>\n    </li>\n  </ul>\n</nav>\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) =>{\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj}/>}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj}/>\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser}/>\n            </Route>\n          </div>\n        )\n        : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  )\n}\nexport default AppRouter;","import React, { useEffect, useState }from \"react\"\nimport AppRouter from \"components/Router\"\nimport { authService } from \"fbase\"\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // setUserObj(user);\n        setUserObj({\n          displayName : user.displayName,\n          uid : user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true)\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    // setUserObj(Object.assign({}, user));\n    setUserObj({displayName : user.displayName,\n      uid : user.uid,\n      updateProfile: (args) => user.updateProfile(args),});\n  }\n  \n  return (\n    <> \n      {init ? (\n        <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> \n      )\n      : \n        'Initializing...'}\n      {/* <footer>&copy;  Nwitter {new Date().getFullYear()}</footer> */}\n    </>\n  )\n}\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n"],"sourceRoot":""}